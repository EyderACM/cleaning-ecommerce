import type { NextPage } from 'next'
import Head from 'next/head'
import { useCallback } from 'react'
import { useRouter } from 'next/router'
import { useForm } from 'react-hook-form'
import { zodResolver } from '@hookform/resolvers/zod'

import { signUpSchema, ISignUp } from '../../common/validation/auth'
import { trpc } from '../../common/client/trpc'
import Sidebar from '../../components/shared/Sidebar'
import SignUpForm from '../../components/sign-up/Form'

const SignUp: NextPage = () => {
  const router = useRouter()
  const { register, handleSubmit } = useForm<ISignUp>({
    resolver: zodResolver(signUpSchema),
  })

  const { mutateAsync, isLoading } = trpc.signup.useMutation()

  const onSubmit = useCallback(
    async (data: ISignUp) => {
      const result = await mutateAsync(data)
      if (result.status === 201) {
        router.push('/')
      }
    },
    [mutateAsync, router],
  )

  return (
    <div>
      <Head>
        <title>Sign In</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <div className="w-full flex flex-row justify-between">
          <Sidebar>
            <Sidebar.TitleContainer>
              <Sidebar.Title>
                Join the biggest <br /> e-cleaning platform.
              </Sidebar.Title>
              <Sidebar.SubTitle>
                Discover the very best cleaning products for your bussiness or
                household. All accross the country.
              </Sidebar.SubTitle>
            </Sidebar.TitleContainer>
          </Sidebar>
          <SignUpForm
            isLoading={isLoading}
            register={register}
            onSubmit={handleSubmit(onSubmit)}
          />
        </div>
      </main>
    </div>
  )
}

export default SignUp
